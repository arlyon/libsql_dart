// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import '../utils/params.dart';
import '../utils/result.dart';
import '../utils/return_value.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

class LibsqlStatement {
  final String statementId;

  const LibsqlStatement({
    required this.statementId,
  });

  Future<ExecuteResult> execute({LibsqlParams? parameters}) =>
      RustLib.instance.api.crateApiStatementLibsqlStatementExecute(
          that: this, parameters: parameters);

  Future<void> finalize() =>
      RustLib.instance.api.crateApiStatementLibsqlStatementFinalize(
        that: this,
      );

  Future<QueryResult> query({LibsqlParams? parameters}) =>
      RustLib.instance.api.crateApiStatementLibsqlStatementQuery(
          that: this, parameters: parameters);

  Future<void> reset() =>
      RustLib.instance.api.crateApiStatementLibsqlStatementReset(
        that: this,
      );

  @override
  int get hashCode => statementId.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is LibsqlStatement &&
          runtimeType == other.runtimeType &&
          statementId == other.statementId;
}
